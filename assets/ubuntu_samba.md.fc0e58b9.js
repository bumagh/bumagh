import{_ as a,o as e,c as s,Q as r}from"./chunks/framework.981c3621.js";const c=JSON.parse('{"title":"Configure correct UTP","description":"","frontmatter":{},"headers":[],"relativePath":"ubuntu/samba.md","filePath":"ubuntu/samba.md"}'),o={name:"ubuntu/samba.md"},t=r(`<p>步骤 1：在 Ubuntu 22.04|20.04|18.04 LTS 上安装 Samba 服务器</p><p>要在 Ubuntu 22.04|20.04|18.04 上安装 Samba，请使用以下命令：</p><p>sudo apt -y update sudo apt -y install samba</p><p>如果您使用静态 IP 地址，当要求使用 DHCP 的 WINS 设置时，请回答“否”。</p><p>安装软件包后，继续执行步骤 2，我们将在其中进行配置和管理 Samba 服务。 步骤2：在Ubuntu 22.04|20.04|18.04上配置Samba共享</p><p>Samba 使用/etc/samba/smb.conf 中的配置文件。 如果更改此配置文件，则更改在重新启动 Samba 守护程序后才会生效。</p><p>让我们首先创建一个通过 Samba 共享的目录。该目录必须存在才能在 smb.conf 中进行配置。我们将在 /home 下创建一个。</p><p>sudo mkdir -p /home/share</p><p>无需身份验证即可访问所有内容（不推荐）</p><p>该目录应该对所有用户都可读可写。</p><p>sudo chmod 777 /home/share</p><p>在 /etc/samba/smb.conf 文件上配置 Samba 共享。</p><p>$ sudo vim /etc/samba/smb.conf</p><p>[global]</p><h1 id="configure-correct-utp" tabindex="-1">Configure correct UTP <a class="header-anchor" href="#configure-correct-utp" aria-label="Permalink to &quot;Configure correct UTP&quot;">​</a></h1><p>unix charset = UTF-8</p><h1 id="change-this-to-the-workgroup-nt-domain-name-your-samba-server-will-be-part-of" tabindex="-1">Change this to the workgroup/NT-domain name your Samba server will be part of <a class="header-anchor" href="#change-this-to-the-workgroup-nt-domain-name-your-samba-server-will-be-part-of" aria-label="Permalink to &quot;Change this to the workgroup/NT-domain name your Samba server will be part of&quot;">​</a></h1><p>workgroup = WORKGROUP bind interfaces only = yes</p><h1 id="set-share-configuration-at-the-end" tabindex="-1">Set share configuration at the end <a class="header-anchor" href="#set-share-configuration-at-the-end" aria-label="Permalink to &quot;Set share configuration at the end&quot;">​</a></h1><p>[Docs] path = /home/share writable = yes guest ok = yes guest only = yes create mode = 0777 directory mode = 0777</p><p>配置详情：</p><pre><code>文档 – Samba 共享名
path=/home/share – 共享目录
guest ok=yes – 打开访客共享
仅访客=是 – 所有访客都受到保护
writable=yes – 将共享目录设置为可写
创建模式=0777 &amp; 目录模式=0777 – 允许访问所有内容
</code></pre><p>配置安全 Samba 共享（推荐）</p><p>将 Samba 共享目录的组所有权设置为 sambashare 组。</p><p>sudo chgrp sambashare /home/share</p><p>创建 samba 共享用户。将 user1 替换为要创建的 samba 共享用户。</p><p>sudo useradd -M -d /home/share/user1 -s /usr/sbin/nologin -G sambashare user1 sudo mkdir /home/share/user1 sudo chown user1:sambashare /home/share/user1 sudo chmod 2770 /home/share/user1</p><p>设置用户密码并确认。</p><p>$ sudo smbpasswd -a user1 New SMB password: Retype new SMB password: Added user user1.</p><p>使用以下命令设置密码后启用 samba 帐户：</p><p>$ sudo smbpasswd -e user1 Enabled user user1.</p><p>我们在 Samba 共享父目录中创建了一个用户的主目录，并将所有权设置为 samba 共享组。让我们创建另一个用户。</p><p>sudo useradd -M -d /home/share/smbadmin -s /usr/sbin/nologin -G sambashare smbadmin sudo mkdir /home/share/smbadmin sudo smbpasswd -a smbadmin sudo smbpasswd -e smbadmin sudo chown smbadmin:sambashare /home/share/smbadmin sudo chmod 2770 /home/share/smbadmin</p><p>配置安全 Samba 共享。</p><p>[user1] path = /home/share/user1 read only = no browseable = no force create mode = 0660 force directory mode = 2770 valid users = @user1 @sambashare</p><p>[smbadmin] path = /home/share/smbadmin read only = no browseable = yes force create mode = 0660 force directory mode = 2770 valid users = @sambashare @smbadmin</p><p>进行更改后重新启动 samba 守护进程。</p><p>sudo systemctl restart smbd nmbd</p><p>确认服务正在运行。</p><p>如果您有活动防火墙，请运行：</p><p>sudo ufw allow &#39;Samba&#39;</p><p>步骤 3：配置 Samba 客户端</p><p>要在Linux系统上访问Samba共享，需要安装并配置Samba客户端。</p><h3 id="install-samba-client-on-ubuntu-debian" tabindex="-1">Install Samba client on Ubuntu / Debian <a class="header-anchor" href="#install-samba-client-on-ubuntu-debian" aria-label="Permalink to &quot;Install Samba client on Ubuntu / Debian&quot;">​</a></h3><p>sudo apt update sudo apt -y install smbclient cifs-utils</p><h3 id="install-samba-client-on-centos-rhel-fedora" tabindex="-1">Install Samba client on CentOS / RHEL / Fedora <a class="header-anchor" href="#install-samba-client-on-centos-rhel-fedora" aria-label="Permalink to &quot;Install Samba client on CentOS / RHEL / Fedora&quot;">​</a></h3><p>sudo yum -y install samba-client cifs-utils sudo dnf -y install samba-client cifs-utils</p><p>访问 Samba 共享 – 暂时</p><p>$ smbclient //sambaserver/share -U sambausername</p><p>Example:</p><p>$ smbclient <a href="/192.168.122.52/user1.html">//192.168.122.52/user1</a> -U user1 WARNING: The &quot;syslog&quot; option is deprecated Enter WORKGROUP\\user1&#39;s password: Try &quot;help&quot; to get a list of possible commands. smb: &gt; list 0: server=192.168.122.52, share=user1 smb: &gt; ls . D 0 Sun Jul 14 01:10:39 2019 .. D 0 Sun Jul 14 00:49:13 2019 latest.zip N 12121295 Tue Jun 18 10:52:03 2019 9544896 blocks of size 1024. 7918732 blocks available smb: &gt; pwd Current directory is \\192.168.122.52\\user1\\</p><p>您可以使用 mount 和 cifs 类型选项将 samba 共享挂载到本地 Linux 系统中的目录。</p><p>$ mkdir -p ~/mounts/shares $ mount -t cifs -o username=user1 <a href="/192.168.122.52/user1.html">//192.168.122.52/user1</a> ~/mounts/shares $ df -h Filesystem Size Used Avail Use% Mounted on /dev/vda1 40G 2.9G 38G 8% / devtmpfs 488M 0 488M 0% /dev tmpfs 496M 0 496M 0% /dev/shm tmpfs 496M 6.7M 489M 2% /run tmpfs 496M 0 496M 0% /sys/fs/cgroup tmpfs 100M 0 100M 0% /run/user/1000 <a href="/192.168.122.52/user1.html">//192.168.122.52/user1</a> 9.2G 1.6G 7.6G 18% /home/computingforgeeks/mounts/shares</p><p>使用 fstab 挂载 Samba 共享。</p><p>您可以使用 fstab 文件通过系统重新引导来保持 Samba 共享挂载。在我的示例中，我将以下行添加到 /ect/fstab 文件的末尾。</p><p><a href="/192.168.122.52/user1.html">//192.168.122.52/user1</a> /mnt/shares cifs credentials=/.sambacreds 0 0</p><p>然后我创建了一个凭据文件。</p><p>$ cat /.sambacreds username=user1 password=password domain=WORKGROUP</p><p>测试 ：</p><p>$ sudo mkdir -p /mnt/shares $ sudo mount -a $ df -hT | grep cifs <a href="/192.168.122.52/user1.html">//192.168.122.52/user1</a> cifs 9.2G 1.6G 7.6G 18% /mnt/shares</p><p>对于 Windows 桌面计算机，请遵循在 Windows 上安装 Samba 共享的标准流程。这就是如何在 Ubuntu 22.04|20.04|18.04 上安装和配置 Samba。</p>`,61),n=[t];function m(p,u,d,i,b,h){return e(),s("div",null,n)}const f=a(o,[["render",m]]);export{c as __pageData,f as default};
